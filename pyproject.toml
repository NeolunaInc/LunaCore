[tool.poetry]
name = "lunacore"
version = "0.1.0"
description = "Orchestrateur multi-agents pour génération automatisée de logiciels"
authors = ["NeoLunaInc"]
readme = "README.md"
packages = [{ include = "core" }, { include = "orchestrator" }, { include = "agents" }, { include = "services" }]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.0"
pydantic = {version="^2.8.0", extras=["dotenv"]}
uvicorn = {version="^0.30.0", extras=["standard"]}
python-json-logger = "^2.0.7"
loguru = "^0.7.2"

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
ruff = "^0.5.4"
pytest = "^8.3.0"
pytest-cov = "^5.0.0"
mypy = "^1.11.0"
pre-commit = "^3.7.1"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E","F","I","UP","B","SIM","W"]
ignore = []
fix = true
exclude = ["venv",".venv",".git"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-q --maxfail=1 --disable-warnings"

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
